include:
  - project: 'IaC/ci-templates'
    ref: main
    file: '/ci-templates/templates.yaml'
  - project: 'IaC/ci-templates'
    ref: main
    file: '/ci-templates/sre-templates.yaml'


.build_docker_image_kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  stage: build
  before_script:
    - env | sort
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${DOCKER_REGISTRY_URI}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - printenv
    - echo "${DOCKER_REGISTRY_URI}/${CI_PROJECT_PATH_SLUG}:${IMAGE_TAG}"
    - echo "${DOCKER_REGISTRY_URI}/${CI_PROJECT_PATH_SLUG}"
    - /kaniko/executor
      --cache=true
      --cache-ttl 920h
      --cache-repo ${DOCKER_REGISTRY_URI}/${CI_PROJECT_PATH_SLUG}
      --context "${CI_PROJECT_DIR}"
      --destination "${DOCKER_REGISTRY_URI}/${CI_PROJECT_PATH_SLUG}:${IMAGE_TAG}"
      --insecure-pull
      --build-arg ARCH=${ARCH}
      --build-arg VERSION=${VERSION}
  tags:
    - kubernetes



stages:
  - build
  - publish
  - deploy


build:
  stage: build
  image: golang:1.19
  script:
    - make ci-build
    - cp docker/prod/Dockerfile ./
  artifacts:
    # instead of manually adding i.e. the built binaries, we can instead just
    # grab anything not tracked in Git
    untracked: true
    expire_in: 1 hour

publish:
  stage: publish
  extends: .build_docker_image_kaniko
  variables:
    IMAGE_TAG: ${CI_PIPELINE_IID}
    CI_PROJECT_PATH_SLUG: ${CI_PROJECT_NAME}
    ARCH: amd64
    VERSION: ${CI_PIPELINE_IID}
  except:
    - tags
  only:
    - branches

# deploy test-tooling:
#   extends: .deploy-sre-test-tooling
#   when: manual
#   except:
#     - tags
#   dependencies:
#     - publish
#   variables:
#     VALUES: '
#       spec.source.helm.valuesObject.sreSlith.tag: "${CI_PIPELINE_IID}"
#       '

# deploy tooling:
#   extends: .deploy-sre-tooling
#   when: manual
#   except:
#     - tags
#   dependencies:
#     - publish
#   variables:
#     VALUES: '
#       spec.source.helm.valuesObject.sreSlith.tag: "${CI_PIPELINE_IID}"
#       '